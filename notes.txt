//a graph traversal problem the size of the graph is [0, 7]
//can be represent as either an adjacency list, adjacency matrix[utilizing binary], 
// list of the vertext that have an edge on the vertices taken from khan academy

//the goal is to find the shortest amount of moves to reach between two nodes
//vertices of the graph is equal to [0, 0] up to [7, 7]
//the edges are how the knight moves.

//takes paramaters for starting position and ending position. determine the amount of moves and the callback print of each vertex
//visited afterwards.

Think about the rules of the board and knight, and make sure to follow them.

From every square, multiple moves are possible. Choose a data structure that will allow you to work with them. 
Donâ€™t allow any moves to go off the board. a hashset

Decide which search algorithm is best to use for this case. Hint: one of them could be a potentially infinite series.
//bfs

Use the chosen search algorithm to find the shortest path between the starting square (or node) and the ending square. 
Output what that full path looks like, e.g.: output full path how??
idk we can create a res result and th e first one to arrive then just print the joined res.

